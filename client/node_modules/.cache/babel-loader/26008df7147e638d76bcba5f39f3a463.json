{"ast":null,"code":"import _regeneratorRuntime from \"/home/alexander/IdeaProjects/shopping-list/client/node_modules/@babel/runtime/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(getShopListByIdSaga);\n\nimport { put } from 'redux-saga/effects';\nimport ACTION from '../actions/actionTypes';\nimport { getShopListById, getShopListBySessionId, createShopList, updateShopListBySessionId, updateShopListById } from '../../api/rest/shopListService';\nexport function getShopListByIdSaga() {\n  var _ref, data;\n\n  return _regeneratorRuntime.wrap(function getShopListByIdSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return put({\n            type: ACTION.USER_REQUEST\n          });\n\n        case 2:\n          _context.prev = 2;\n          _context.next = 5;\n          return getShopListById();\n\n        case 5:\n          _ref = _context.sent;\n          data = _ref.data;\n          _context.next = 9;\n          return put({\n            type: ACTION.USERS_RESPONSE,\n            users: data\n          });\n\n        case 9:\n          _context.next = 15;\n          break;\n\n        case 11:\n          _context.prev = 11;\n          _context.t0 = _context[\"catch\"](2);\n          _context.next = 15;\n          return put({\n            type: ACTION.USER_ERROR,\n            error: _context.t0\n          });\n\n        case 15:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, this, [[2, 11]]);\n}","map":{"version":3,"sources":["/home/alexander/IdeaProjects/shopping-list/client/src/store/sagas/shoppingSaga.js"],"names":["getShopListByIdSaga","put","ACTION","getShopListById","getShopListBySessionId","createShopList","updateShopListBySessionId","updateShopListById","type","USER_REQUEST","data","USERS_RESPONSE","users","USER_ERROR","error"],"mappings":";;;;yBAKiBA,mB;;AALjB,SAASC,GAAT,QAAoB,oBAApB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,SAASC,eAAT,EAA0BC,sBAA1B,EACIC,cADJ,EACoBC,yBADpB,EAC+CC,kBAD/C,QACyE,gCADzE;AAGA,OAAO,SAAUP,mBAAV;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AACH,iBAAMC,GAAG,CAAC;AAACO,YAAAA,IAAI,EAAEN,MAAM,CAACO;AAAd,WAAD,CAAT;;AADG;AAAA;AAAA;AAGkB,iBAAMN,eAAe,EAArB;;AAHlB;AAAA;AAGSO,UAAAA,IAHT,QAGSA,IAHT;AAAA;AAIC,iBAAMT,GAAG,CAAC;AAAEO,YAAAA,IAAI,EAAEN,MAAM,CAACS,cAAf;AAA+BC,YAAAA,KAAK,EAAEF;AAAtC,WAAD,CAAT;;AAJD;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAMC,iBAAMT,GAAG,CAAC;AAAEO,YAAAA,IAAI,EAAEN,MAAM,CAACW,UAAf;AAA2BC,YAAAA,KAAK;AAAhC,WAAD,CAAT;;AAND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { put } from 'redux-saga/effects'\nimport ACTION from '../actions/actionTypes'\nimport { getShopListById, getShopListBySessionId,\n    createShopList, updateShopListBySessionId, updateShopListById } from '../../api/rest/shopListService'\n\nexport function* getShopListByIdSaga() {\n    yield put({type: ACTION.USER_REQUEST});\n    try {\n        const { data } = yield getShopListById();\n        yield put({ type: ACTION.USERS_RESPONSE, users: data})\n    } catch (e) {\n        yield put({ type: ACTION.USER_ERROR, error: e})\n    }\n}\n"]},"metadata":{},"sourceType":"module"}